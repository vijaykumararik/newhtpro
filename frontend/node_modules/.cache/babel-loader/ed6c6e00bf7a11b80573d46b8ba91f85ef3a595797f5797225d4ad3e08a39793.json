{"ast":null,"code":"var _jsxFileName = \"E:\\\\SCOPE COMPANY\\\\firestproject-main\\\\frontend\\\\src\\\\components\\\\Events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Adva from './Adva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [info, setInfo] = useState(null);\n  const [addNewEvent, setAddNewEvent] = useState(false);\n  const [alter, setAlter] = useState(1);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const res = await axios.get('http://localhost:4000/events');\n        setEvents(res.data);\n        console.log(res.data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, [alter]);\n  const convertToBase64 = buffer => {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  function handleInfo(e) {\n    console.log(e);\n    const info = events.filter(event => event.title === e.targate.value);\n    setInfo(info);\n    console.log(info);\n    setAddNewEvent(null);\n    setAlter(alter + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Events\",\n              children: \"Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: event.title,\n              onChange: e => handleInfo,\n              children: event.title\n            }, event.eventId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-4\",\n          onClick: () => {\n            setAddNewEvent(true);\n            setInfo(null);\n            setAlter(alter + 1);\n          },\n          children: \"Add New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [addNewEvent ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-4\",\n            children: \"Add New Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Adva, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : null, info && info.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: event.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: event.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-wrap\",\n              children: event.images.map((image, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ms-3 mb-3\",\n                height: \"100px\",\n                width: \"100px\",\n                src: `data:image/jpeg;base64,${convertToBase64(image.image.data)}`,\n                alt: \"\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, event.eventId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"th56kfDw0v8m58JvU71xkM9tNOM=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","useEffect","axios","Adva","Events","events","setEvents","info","setInfo","addNewEvent","setAddNewEvent","alter","setAlter","fetchEvents","res","get","data","console","log","error","convertToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","window","btoa","handleInfo","e","filter","event","title","targate","value","map","eventId","description","images","image"],"sources":["E:/SCOPE COMPANY/firestproject-main/frontend/src/components/Events.jsx"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Adva from './Adva';\r\n\r\nfunction Events() {\r\n  const [events, setEvents] = useState([]);\r\n  const [info, setInfo] = useState(null);\r\n  const [addNewEvent, setAddNewEvent] = useState(false);\r\n  const [alter,setAlter]=useState(1)\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:4000/events');\r\n        setEvents(res.data);\r\n        console.log(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [alter]);\r\n\r\n  const convertToBase64 = (buffer) => {\r\n    let binary = '';\r\n    const bytes = new Uint8Array(buffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  };\r\n\r\n  function handleInfo(e) {\r\n    console.log(e);\r\n    const info = events.filter((event) => event.title === e.targate.value);\r\n    setInfo(info);\r\n    console.log(info);\r\n    setAddNewEvent(null);\r\n    setAlter(alter+1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"list-group\">\r\n            {/* <h4 className=\"list-group-item list-group-item-primary\">Events</h4>\r\n            {events.map((event) => (\r\n              <button\r\n                key={event.eventId}\r\n                className=\"list-group-item list-group-item-action\"\r\n                onClick={() => handleInfo(event.title)}\r\n              >\r\n                {event.title}\r\n              </button>\r\n            ))} */}\r\n            <select name=\"\" id=\"\">\r\n              <option value=\"Events\">Events</option>\r\n              {\r\n                events.map((event)=>(\r\n                  <option \r\n                  key={event.eventId}\r\n                  value={event.title}\r\n                  onChange={(e) => handleInfo}\r\n                  >{event.title}</option>\r\n                ))\r\n              }\r\n            </select>\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={() => {\r\n              setAddNewEvent(true);\r\n              setInfo(null);\r\n              setAlter(alter+1)\r\n            }}\r\n          >\r\n            Add New Event\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {addNewEvent ? (\r\n            <div>\r\n              <h4 className=\"mb-4\">Add New Event</h4>\r\n              <Adva />\r\n            </div>\r\n          ) : null}\r\n          {info &&\r\n            info.map((event) => (\r\n              <div key={event.eventId} className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{event.title}</h5>\r\n                  <p className=\"card-text\">{event.description}</p>\r\n                  <div className=\"d-flex flex-wrap\">\r\n                    {event.images.map((image, i) => (\r\n                      <img\r\n                        key={i}\r\n                        className=\"ms-3 mb-3\"\r\n                        height=\"100px\"\r\n                        width=\"100px\"\r\n                        src={`data:image/jpeg;base64,${convertToBase64(image.image.data)}`}\r\n                        alt=\"\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}