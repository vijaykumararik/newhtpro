{"ast":null,"code":"var _jsxFileName = \"E:\\\\SCOPE COMPANY\\\\firestproject-main\\\\frontend\\\\src\\\\components\\\\Allevents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimpo;\nfunction Allevents() {\n  _s();\n  const title = useRef();\n  const description = useRef();\n  const images = useRef();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState('');\n  const [eventUpdate, setEventUpdate] = useState(null);\n  const [newImages, setNewImages] = useState([]);\n  // featch details\n  useEffect(() => {\n    fetch(\"http://localhost:4000/getevents\").then(res => res.json()).then(data => {\n      setEvents(data);\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n      setError('Failed to fetch events');\n    });\n  }, []);\n  const addImages = e => {\n    e.preventDefault();\n    const files = images.current.files;\n    const maxImages = 15;\n    const selectedImages = Array.from(files).slice(0, maxImages);\n    let newarr = selectedImages.map(m => {\n      return m.name;\n    });\n    console.log(newarr);\n    setNewImages(newarr);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newEvent = {\n      title: title.current.value,\n      description: description.current.value,\n      images: newImages\n    };\n    console.log(newEvent);\n    fetch('http://localhost:4000/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    }).then(() => {\n      setEventUpdate('New event added successfully');\n    }).catch(() => {\n      setEventUpdate('Failed to add event. Please try again.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addevents\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add new event here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter title\",\n          ref: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter description\",\n          ref: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          multiple: true,\n          ref: images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addImages,\n          children: \"Add Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), eventUpdate && /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'green'\n          },\n          children: eventUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayevnts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"All Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: event.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 31\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Allevents, \"A8wN7NBv9l7H11yWCl5On6ZpYZM=\");\n_c = Allevents;\nexport default Allevents;\nvar _c;\n$RefreshReg$(_c, \"Allevents\");","map":{"version":3,"names":["React","useEffect","useRef","useState","impo","Allevents","title","description","images","events","setEvents","error","setError","eventUpdate","setEventUpdate","newImages","setNewImages","fetch","then","res","json","data","console","log","catch","addImages","e","preventDefault","files","current","maxImages","selectedImages","Array","from","slice","newarr","map","m","name","handleSubmit","newEvent","value","method","headers","body","JSON","stringify","color","event","image","index","_id"],"sources":["E:/SCOPE COMPANY/firestproject-main/frontend/src/components/Allevents.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimpo\r\n\r\nfunction Allevents() {\r\n  const title = useRef();\r\n  const description = useRef();\r\n  const images = useRef();\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState('');\r\n  \r\n    const [eventUpdate, setEventUpdate] = useState(null);\r\n  const [newImages, setNewImages] = useState([]);\r\n// featch details\r\nuseEffect(()=>{\r\n  fetch(\"http://localhost:4000/getevents\")\r\n  .then((res=>res.json()))\r\n  .then((data)=>{\r\n    setEvents(data)\r\n    console.log(data);\r\n  })\r\n  .catch ((error)=> {\r\n    console.log(error);\r\n    setError('Failed to fetch events');\r\n  })\r\n},[])\r\n  const addImages = (e) => {\r\n    e.preventDefault();\r\n    const files = images.current.files;\r\n    const maxImages = 15;\r\n    const selectedImages = Array.from(files).slice(0, maxImages);\r\n    let newarr=selectedImages.map((m)=>{\r\n      return m.name\r\n    })\r\n    console.log(newarr);\r\n    setNewImages(newarr);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newEvent = {\r\n      title: title.current.value,\r\n      description: description.current.value,\r\n      images: newImages,\r\n    };\r\n    console.log(newEvent);\r\n\r\n    fetch('http://localhost:4000/events', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newEvent),\r\n    })\r\n      .then(() => {\r\n        setEventUpdate('New event added successfully');\r\n      })\r\n      .catch(() => {\r\n        setEventUpdate('Failed to add event. Please try again.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <img src=\"\" alt=\"\" />\r\n    <div className=\"addevents\">\r\n      <h4>Add new event here</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Enter title\" ref={title} />\r\n        <input type=\"text\" placeholder=\"Enter description\" ref={description} />\r\n        <input   type=\"file\" accept=\"image/*\" multiple ref={images}  />\r\n        <button onClick={addImages}>Add Images</button>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        {eventUpdate && <h2 style={{ color: 'green' }}>{eventUpdate}</h2>}\r\n      </form>\r\n    </div>\r\n    <div className=\"displayevnts\">\r\n    <h4>All Events</h4>\r\n      {events.map((event) => (\r\n        <div key={event._id}>\r\n          <h5>{event.title}</h5>\r\n          <p>{event.description}</p>\r\n          <ul>\r\n            {event.images.map((image, index) => (\r\n              <li key={index}><img src={image} alt=\"img\" /></li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n      {error && <p>{error}</p>}\r\n    \r\n\r\n    </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Allevents;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}