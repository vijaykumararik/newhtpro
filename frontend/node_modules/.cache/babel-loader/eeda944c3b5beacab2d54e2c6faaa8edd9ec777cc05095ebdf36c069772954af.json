{"ast":null,"code":"var _jsxFileName = \"E:\\\\SCOPE COMPANY\\\\firestproject-main\\\\frontend\\\\src\\\\components\\\\Adva.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Advaimg from './Advaimg';\n\n// const Adva = () => {\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [imageUrl, setImageUrl] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setSelectedFile(event.target.files[0]);\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('image', selectedFile);\n\n//     try {\n//       const response = await axios.post('http://localhost:4000/upload', formData);\n\n//       if (response.status === 200) {\n//         setImageUrl(response.data.imageUrl);\n//       } else {\n//         throw new Error('Image upload failed');\n//       }\n//     } catch (error) {\n//       console.error('Error during image upload:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         <form onSubmit={handleFormSubmit}>\n//           <input type=\"file\" onChange={handleFileChange} name=\"image\" />\n//           <button type=\"submit\">Upload</button>\n//         </form>\n//       </div>\n//       <Advaimg/>\n//     </div>\n//   );\n// };\n\n// export default Adva;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Advaimg from './Advaimg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Adva = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [eventData, setEventData] = useState({\n    eventId: '',\n    title: '',\n    description: ''\n  });\n  const [imageUrls, setImageUrls] = useState([]);\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files).slice(0, 15); // Restricting to a maximum of 15 images\n    setSelectedFiles(files);\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEventData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('eventId', eventData.eventId);\n      formData.append('title', eventData.title);\n      formData.append('description', eventData.description);\n      selectedFiles.forEach(file => {\n        formData.append('images', file);\n      });\n      const response = await axios.post('http://localhost:4000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        setImageUrls(response.data.imageUrls);\n      } else {\n        throw new Error('Event upload failed');\n      }\n    } catch (error) {\n      console.error('Error during event upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Event ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"eventId\",\n            value: eventData.eventId,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: eventData.title,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: eventData.description,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange,\n            name: \"images\",\n            multiple: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Advaimg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Adva, \"InfMy3Y92xr7zY3pWNDYk12gjNM=\");\n_c = Adva;\nexport default Adva;\nvar _c;\n$RefreshReg$(_c, \"Adva\");","map":{"version":3,"names":["React","useState","axios","Advaimg","Adva","selectedFiles","setSelectedFiles","eventData","setEventData","eventId","title","description","imageUrls","setImageUrls","handleFileChange","event","files","Array","from","target","slice","handleInputChange","name","value","prevData","handleFormSubmit","preventDefault","formData","FormData","append","forEach","file","response","post","headers","status","data","Error","error","console"],"sources":["E:/SCOPE COMPANY/firestproject-main/frontend/src/components/Adva.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Advaimg from './Advaimg';\r\n\r\n\r\n// const Adva = () => {\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n//   const [imageUrl, setImageUrl] = useState(null);\r\n\r\n//   const handleFileChange = (event) => {\r\n//     setSelectedFile(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleFormSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('image', selectedFile);\r\n\r\n//     try {\r\n//       const response = await axios.post('http://localhost:4000/upload', formData);\r\n      \r\n//       if (response.status === 200) {\r\n//         setImageUrl(response.data.imageUrl);\r\n//       } else {\r\n//         throw new Error('Image upload failed');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error during image upload:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <form onSubmit={handleFormSubmit}>\r\n//           <input type=\"file\" onChange={handleFileChange} name=\"image\" />\r\n//           <button type=\"submit\">Upload</button>\r\n//         </form>\r\n//       </div>\r\n//       <Advaimg/>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Adva;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Advaimg from './Advaimg';\r\n\r\nconst Adva = () => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [eventData, setEventData] = useState({\r\n    eventId: '',\r\n    title: '',\r\n    description: '',\r\n  });\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  const handleFileChange = (event) => {\r\n    const files = Array.from(event.target.files).slice(0, 15); // Restricting to a maximum of 15 images\r\n    setSelectedFiles(files);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEventData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('eventId', eventData.eventId);\r\n      formData.append('title', eventData.title);\r\n      formData.append('description', eventData.description);\r\n\r\n      selectedFiles.forEach((file) => {\r\n        formData.append('images', file);\r\n      });\r\n\r\n      const response = await axios.post('http://localhost:4000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setImageUrls(response.data.imageUrls);\r\n      } else {\r\n        throw new Error('Event upload failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during event upload:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div>\r\n            <label>Event ID:</label>\r\n            <input type=\"text\" name=\"eventId\" value={eventData.eventId} onChange={handleInputChange} required />\r\n          </div>\r\n          <div>\r\n            <label>Title:</label>\r\n            <input type=\"text\" name=\"title\" value={eventData.title} onChange={handleInputChange} required />\r\n          </div>\r\n          <div>\r\n            <label>Description:</label>\r\n            <textarea name=\"description\" value={eventData.description} onChange={handleInputChange} required />\r\n          </div>\r\n          <div>\r\n            <input type=\"file\" onChange={handleFileChange} name=\"images\" multiple required />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <Advaimg />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adva;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACH,KAAK,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3Dd,gBAAgB,CAACU,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,iBAAiB,GAAIN,KAAK,IAAK;IACnC,MAAM;MAAEO,IAAI;MAAEC;IAAM,CAAC,GAAGR,KAAK,CAACI,MAAM;IACpCX,YAAY,CAAEgB,QAAQ,KAAM;MAC1B,GAAGA,QAAQ;MACX,CAACF,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,gBAAgB,GAAG,MAAOV,KAAK,IAAK;IACxCA,KAAK,CAACW,cAAc,EAAE;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEtB,SAAS,CAACE,OAAO,CAAC;MAC7CkB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEtB,SAAS,CAACG,KAAK,CAAC;MACzCiB,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEtB,SAAS,CAACI,WAAW,CAAC;MAErDN,aAAa,CAACyB,OAAO,CAAEC,IAAI,IAAK;QAC9BJ,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEE,IAAI,CAAC;MACjC,CAAC,CAAC;MAEF,MAAMC,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,8BAA8B,EAAEN,QAAQ,EAAE;QAC1EO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BtB,YAAY,CAACmB,QAAQ,CAACI,IAAI,CAACxB,SAAS,CAAC;MACvC,CAAC,MAAM;QACL,MAAM,IAAIyB,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QAAM,QAAQ,EAAEb,gBAAiB;QAAA,wBAC/B;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwB,eACxB;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,SAAS;YAAC,KAAK,EAAElB,SAAS,CAACE,OAAQ;YAAC,QAAQ,EAAEY,iBAAkB;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAChG,eACN;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAqB,eACrB;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAC,OAAO;YAAC,KAAK,EAAEd,SAAS,CAACG,KAAM;YAAC,QAAQ,EAAEW,iBAAkB;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAC5F,eACN;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA2B,eAC3B;YAAU,IAAI,EAAC,aAAa;YAAC,KAAK,EAAEd,SAAS,CAACI,WAAY;YAAC,QAAQ,EAAEU,iBAAkB;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/F,eACN;UAAA,uBACE;YAAO,IAAI,EAAC,MAAM;YAAC,QAAQ,EAAEP,gBAAiB;YAAC,IAAI,EAAC,QAAQ;YAAC,QAAQ;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAC7E,eACN;UAAQ,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACH,eACN,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEV,CAAC;AAAC,GA5EIV,IAAI;AAAA,KAAJA,IAAI;AA8EV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}